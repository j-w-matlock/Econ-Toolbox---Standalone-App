<UserControl x:Class="EconToolbox.Desktop.Views.EadView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             SnapsToDevicePixels="True"
             UseLayoutRounding="True">
    <Grid>
        <ScrollViewer Focusable="False"
                      HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Auto"
                      Padding="{StaticResource Padding.Card}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0"
                        Style="{StaticResource Border.Explainer}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="{StaticResource Margin.Stack}">
                            <TextBlock FontFamily="Segoe MDL2 Assets"
                                       Text=""
                                       FontSize="20"
                                       Foreground="{StaticResource Brush.Primary}"
                                       Margin="{StaticResource Margin.Inline}"/>
                            <TextBlock Text="Expected Annual Damage Instructions"
                                       FontWeight="Bold"
                                       FontSize="16"
                                       Foreground="{StaticResource Brush.Primary}"/>
                        </StackPanel>
                        <TextBlock Style="{StaticResource Text.Body}">
                            <Run Text="List probability-damage pairs for each category. The tool auto-completes the curve by inserting 0% and 100% points using the trapezoidal method."/>
                            <LineBreak/>
                            <Run Text="Toggle Include Stage if you have stage data aligned with the same probabilities."/>
                            <LineBreak/>
                            <Run Text="After editing the grid, click Calculate EAD so charts and statistics capture your latest entries."/>
                        </TextBlock>
                    </StackPanel>
                </Border>

                <WrapPanel Grid.Row="1"
                           Margin="{StaticResource Margin.StackLarge}"
                           ItemHeight="36"
                           ItemWidth="220"
                           MinWidth="200">
                    <WrapPanel.Style>
                        <Style TargetType="WrapPanel">
                            <Setter Property="ItemWidth" Value="220"/>
                            <Setter Property="ItemHeight" Value="36"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource WidthToLayoutModeConverter}}"
                                             Value="Narrow">
                                    <Setter Property="ItemWidth" Value="{x:Static sys:Double.NaN}"/>
                                    <Setter Property="ItemHeight" Value="{x:Static sys:Double.NaN}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Style>
                    <Button Command="{Binding AddDamageColumnCommand}" Margin="{StaticResource Margin.Inline}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="" Margin="{StaticResource Margin.Inline}"/>
                            <TextBlock Text="Add Damage Column"/>
                        </StackPanel>
                    </Button>
                    <Button Command="{Binding RemoveDamageColumnCommand}" Margin="{StaticResource Margin.Inline}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="" Margin="{StaticResource Margin.Inline}"/>
                            <TextBlock Text="Remove Damage Column"/>
                        </StackPanel>
                    </Button>
                    <CheckBox Content="Include Stage"
                              IsChecked="{Binding UseStage}"
                              VerticalAlignment="Center"
                              Margin="{StaticResource Margin.Inline}"/>
                    <Button Command="{Binding ComputeCommand}" Margin="{StaticResource Margin.Inline}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="" Margin="{StaticResource Margin.Inline}"/>
                            <TextBlock Text="Calculate EAD"/>
                        </StackPanel>
                    </Button>
                    <Button Command="{Binding ExportCommand}" Margin="{StaticResource Margin.Inline}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="" Margin="{StaticResource Margin.Inline}"/>
                            <TextBlock Text="Export Summary"/>
                        </StackPanel>
                    </Button>
                </WrapPanel>

                <UniformGrid Grid.Row="2"
                             Margin="{StaticResource Margin.StackLarge}">
                    <UniformGrid.Style>
                        <Style TargetType="UniformGrid">
                            <Setter Property="Columns" Value="1"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource WidthToLayoutModeConverter}}"
                                             Value="Wide">
                                    <Setter Property="Columns" Value="2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </UniformGrid.Style>

                    <Border Background="{StaticResource Brush.Surface}"
                            CornerRadius="6"
                            Padding="{StaticResource Padding.Content}"
                            BorderBrush="{StaticResource Brush.Border}"
                            BorderThickness="1">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Margin" Value="0,0,0,16"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource WidthToLayoutModeConverter}}"
                                                 Value="Wide">
                                        <Setter Property="Margin" Value="0,0,16,0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <DataGrid x:Name="EadDataGrid"
                                  ItemsSource="{Binding Rows}"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="True"
                                  CanUserDeleteRows="True"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                    </Border>

                    <Border Background="{StaticResource Brush.Surface}"
                            CornerRadius="6"
                            Padding="{StaticResource Padding.Content}"
                            BorderBrush="{StaticResource Brush.Border}"
                            BorderThickness="1">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Margin" Value="0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource WidthToLayoutModeConverter}}"
                                                 Value="Wide">
                                        <Setter Property="Margin" Value="{StaticResource Margin.InlineLarge}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel>
                            <TextBlock Text="Visualize Your Curve"
                                       FontWeight="SemiBold"
                                       Margin="{StaticResource Margin.Stack}"/>
                            <Canvas Height="160" Margin="{StaticResource Margin.Stack}">
                                <Polyline Points="{Binding FrequencyDamagePoints}"
                                          Stroke="{StaticResource Brush.Accent}"
                                          StrokeThickness="2"/>
                                <Polyline Points="{Binding StageDamagePoints}"
                                          Stroke="{StaticResource Brush.Primary}"
                                          StrokeThickness="2"/>
                            </Canvas>
                            <TextBlock Style="{StaticResource Text.Caption}" TextWrapping="Wrap">
                                The teal line plots damages against exceedance probability, while the navy line (when stage is supplied) shows the paired stage-damage curve. Smoother, monotonic inputs yield clearer charts.
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </UniformGrid>

                <ItemsControl ItemsSource="{Binding Results}" Grid.Row="3" Margin="{StaticResource Margin.StackLarge}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/> 
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{StaticResource Brush.Surface}"
                                    BorderBrush="{StaticResource Brush.Border}"
                                    BorderThickness="1"
                                    CornerRadius="6"
                                    Padding="{StaticResource Padding.Content}"
                                    Margin="{StaticResource Margin.Inline}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontFamily="Segoe MDL2 Assets"
                                               Text=""
                                               FontSize="16"
                                               Foreground="{StaticResource Brush.Primary}"
                                               Margin="{StaticResource Margin.Inline}"/>
                                    <TextBlock Text="{Binding}" Style="{StaticResource Text.Body}"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Border Grid.Row="4"
                        Style="{StaticResource Border.ResultInfo}">
                    <StackPanel>
                        <TextBlock Text="Result Interpretation"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource Brush.Primary}"
                                   Margin="{StaticResource Margin.Stack}"/>
                        <TextBlock Style="{StaticResource Text.Body}">
                            Each Expected Annual Damage value averages the damage column across the entire probability curve you supplied. Higher damages at frequent events raise the EAD most dramatically. The plotted curves update with every calculation, helping you confirm the shape of the probability and stage relationships before exporting your Excel summary.
                        </TextBlock>
                    </StackPanel>
                </Border>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
